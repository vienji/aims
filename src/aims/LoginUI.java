/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aims;

import aims.databasemanager.UserDBController;
import aims.inventory.InventoryUI;
import aims.admin.AdminUI;
import aims.accounting.AccountingUI;
import aims.databasemanager.Driver;
import aims.images.ImageManipulator;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Vienji
 */
public class LoginUI extends javax.swing.JFrame {
    /**
     * Creates new form Dashboard
     */
    public LoginUI() {
        initComponents();
        
        ImageManipulator icon = new ImageManipulator();
        
        ImageIcon icons = new ImageIcon("src\\aims\\images\\aims-logo.png");
        setIconImage(icons.getImage());
        icon.setIcons("src\\aims\\images\\aims_logo.png", logo);
        icon.setIcons("src\\aims\\images\\network_settings2.png", settings);
        icon.setIcons("src\\aims\\images\\refreshNetwork.png", refresh);
        Connection connection = Driver.getConnection();
        
        if(connection == null){
            icon.setIcons("src\\aims\\images\\disconnected.png", networkStatus);
            username.setEnabled(false);
            password.setEnabled(false);
            username.setText("");
            password.setText("");
        } else {
            icon.setIcons("src\\aims\\images\\connected.png", networkStatus);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        about = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        settings = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        accessLevelComBox = new javax.swing.JComboBox<>();
        login = new javax.swing.JButton();
        networkStatus = new javax.swing.JLabel();
        refresh = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setPreferredSize(new java.awt.Dimension(720, 474));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        about.setBackground(new java.awt.Color(255, 255, 255));
        about.setForeground(new java.awt.Color(255, 255, 255));
        about.setText("About");
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutMouseExited(evt);
            }
        });
        jPanel1.add(about, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        jLabel10.setFont(new java.awt.Font("Miriam Fixed", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 102));
        jLabel10.setText("JAR Creatives");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Miriam Fixed", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 0));
        jLabel5.setText("AIMS");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel8.setFont(new java.awt.Font("Miriam Fixed", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("|");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        settings.setBackground(new java.awt.Color(255, 255, 255));
        settings.setForeground(new java.awt.Color(255, 255, 255));
        settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsMouseClicked(evt);
            }
        });
        jPanel1.add(settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 28, 28));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 50));

        jPanel2.setBackground(new java.awt.Color(12, 72, 72));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LOGIN");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("username");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("password");

        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        accessLevelComBox.setBackground(new java.awt.Color(153, 153, 153));
        accessLevelComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "cashier", "staff" }));

        login.setText("Login");
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });

        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(accessLevelComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(username))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(password)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(networkStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(accessLevelComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(login)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(networkStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 260, -1));

        jPanel3.setBackground(new java.awt.Color(153, 255, 0));

        logo.setPreferredSize(new java.awt.Dimension(340, 340));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 460, 410));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
        Connection connection = Driver.getConnection();
        if(connection != null){
           String[] credentials = new UserDBController().getCredentials(username.getText(), password.getText(), (String) accessLevelComBox.getSelectedItem());

            if(credentials[0] != null && credentials[1] != null && credentials[2] != null && credentials[3] != null){

                if(credentials[4].equals("active")){
                   String level = credentials[3];

                   switch(level){
                       case "admin":
                           dispose();
                           AdminUI adminUI = new AdminUI();
                           adminUI.usernameDisplay.setText(credentials[0]);
                           adminUI.setVisible(true);                    
                           break;

                       case "cashier":      
                           AccountingUI accountingUI = new AccountingUI();
                           accountingUI.usernameDisplay.setText(credentials[0]);
                           accountingUI.setVisible(true);
                           dispose();
                           break;

                       case "staff": 
                           InventoryUI inventoryUI = new InventoryUI();
                           inventoryUI.usernameDisplay.setText(credentials[0]);
                           inventoryUI.setVisible(true);
                           dispose();
                           break;
                   }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "User is Inactive");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Incorrect Credentials!");
            } 
        } else {
            ImageManipulator icon = new ImageManipulator();
            JOptionPane.showMessageDialog(rootPane, "You're not connected to the server!");
            icon.setIcons("src\\aims\\images\\disconnected.png", networkStatus);
            username.setEnabled(false);
            password.setEnabled(false);
            username.setText("");
            password.setText("");
        }    
    }//GEN-LAST:event_loginMouseClicked

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Connection connection = Driver.getConnection();
            if(connection != null){
               String[] credentials = new UserDBController().getCredentials(username.getText(), password.getText(), (String) accessLevelComBox.getSelectedItem());

                for(String a: credentials){
                    System.out.println(a);
                }

                if(credentials[0] != null && credentials[1] != null && credentials[2] != null && credentials[3] != null){

                    if(credentials[4].equals("active")){
                       String level = credentials[3];

                       switch(level){
                           case "admin":
                               dispose();
                               AdminUI adminUI = new AdminUI();
                               adminUI.usernameDisplay.setText(credentials[0]);
                               adminUI.setVisible(true);                    
                               break;

                           case "cashier":      
                               AccountingUI accountingUI = new AccountingUI();
                               accountingUI.usernameDisplay.setText(credentials[0]);
                               accountingUI.setVisible(true);
                               dispose();
                               break;

                           case "staff": 
                               InventoryUI inventoryUI = new InventoryUI();
                               inventoryUI.usernameDisplay.setText(credentials[0]);
                               inventoryUI.setVisible(true);
                               dispose();
                               break;
                       }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "User is Inactive");
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Incorrect Credentials!");
                } 
            } else {
                ImageManipulator icon = new ImageManipulator();
                JOptionPane.showMessageDialog(rootPane, "You're not connected to the server!");
                icon.setIcons("src\\aims\\images\\disconnected.png", networkStatus);
                username.setEnabled(false);
                password.setEnabled(false);
                username.setText("");
                password.setText("");
            }
        }
    }//GEN-LAST:event_passwordKeyPressed

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        new About().setVisible(true);
    }//GEN-LAST:event_aboutMouseClicked

    private void aboutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseEntered
        about.setForeground(new Color(0,204,255));
    }//GEN-LAST:event_aboutMouseEntered

    private void aboutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseExited
        about.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_aboutMouseExited

    private void settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsMouseClicked
        ServerSettings serverSettings = new ServerSettings();
        serverSettings.setVisible(true);
    }//GEN-LAST:event_settingsMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        ImageManipulator icon = new ImageManipulator();
        Connection connection = Driver.getConnection();
        
        if(connection == null){
            icon.setIcons("src\\aims\\images\\disconnected.png", networkStatus);
            username.setEnabled(false);
            password.setEnabled(false);
        } else {
            icon.setIcons("src\\aims\\images\\connected.png", networkStatus);
            username.setEnabled(true);
            password.setEnabled(true);
        }
    }//GEN-LAST:event_refreshMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel about;
    private javax.swing.JComboBox<String> accessLevelComBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton login;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel networkStatus;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel refresh;
    private javax.swing.JLabel settings;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
